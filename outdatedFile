[git的安装]

[git的初始化配置]
局部--每个仓库的.git/config
全局-- ~/gitconfig
	
	git config (--global) user.email "xxxx"
	git config (--global) user.name"xxxx"


[创建本地仓库]
git init <文件夹名> 
	（git init .在当前文件夹下创建）

[查看仓库的状态]
(提醒你哪些文件（或文件的修改）没有加到待提交列表 列表哪些文件没有提交到本地仓库 以及提示你该怎么用git 帮助你解决文件冲突)
git status 


[查看具体操作的状态]
	查看最近修改中的内容
	git diff
	查看提交日志  
	git log 
	查看某条日志详情
	git show <commit-id>

a + 表示 增加的修改 增加的内容
b - 表示 减少的修改 减少的内容


[提交操作]
到待提交列表
	提交文件或改动到待提交列表
	git add <filename>

	提交文件的删除到列表
	git rm <filename>
到本地仓库
	将列表中的提交到仓库 并备注内容
	git commit -m <descriptions>

[撤销操作]
撤销仓库中（提交列表中）的内容
	撤销提交列表中的内容 git reset HEAD <file or directory name>
	撤销仓库的最近一次提交 
		到提交列表 git reset --soft HEAD~1
		到本地     git reset HEAD~1
撤销本地的某些改动
git checkout <file or directory name>

[文件忽略]
在与.git同级的目录下 创建一个 .gitignore  文件
文件中写入如下：
	*.html *.xml *.sql   (忽略这个为后缀的文件)
	directory/filename (忽略某个位置下的具体的文件)
	
将文件 add 并commit 即可生效 （此类文件不会被仓库git关注、上传 ）

[分支]
创建分支后 新分支会复制master目前的提交 但之后新分支与master分支的修改互不干扰
查看当前仓库的分支
git branch 

创建分支
git branch <branch name>

切换到分支
git checkout <branch name>

删除分支
git branch -D <branch name>

合并分支   
	完全复制 其他分支有但当前分支没有的提交 到当前分支 （commit-id也相同）
	即复制目标分支的新提交到本分支
git merge <branch name>

[远程仓库]
	git remote 查看创建的远程仓库连接的情况
	git remote add <remote name> <Url> 增加远程仓库连接
	git remote remove <remote name> 删除远程仓库连接
	git remote rename <old name> <new name> 重命名远程仓库连接
	git remote get-url <remote name> 获得某连接导向的url
	git remote set-url <remote name> <new url> 重设某连接的导向url
  [Github]
	在github注册帐号-->点击右上角加号-->New Repository-->选择public仓库-->不选择创建README\liscense\gitignore等文件 -->记录下https / ssh 访问远程仓库的方式 传本地仓库到远程的github

创建本地仓库到远程仓库的连接 命名为origin (GITHUBUSER_NAME REPOSITORY_NAME根据自己的信息改变)
(ssh方式) git remote add origin git@github.com:GITHUBUSER_NAME/REPOSITORY_NAME.git
(https方式) git remote add origin https://github.com/GITHUBUSER_NAME/REPOSITORY_NAME.git
传当前仓库当前分支到远程仓库的master分支
git push -u orgin master

